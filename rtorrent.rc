# ----------------------------------------------------------------------
#  $RCSfile$
#
#  Resource file for rTorrent
#
#  $Id$
#

# Maximum and minimum number of peers to connect to per torrent.
#min_peers = 40
max_peers = 60

# Same as above but for seeding completed torrents (-1 = same as downloading)
#min_peers_seed = 10
max_peers_seed = -1

# Maximum number of simultaneous uploads per torrent.
max_uploads = 7

# Global upload and download rate in KiB. "0" for unlimited.
download_rate = 600
upload_rate = 40

# Default directory to save the downloaded torrents.
directory = ~/downloads/ongoing

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = ~/downloads/torrents/rtorrent-session

# Watch a directory for new torrents, restart torrents that have been
# copied back and stop those that have been deleted
schedule = watch_directory,5,5,load_start=~/downloads/torrents/*.torrent
schedule = tied_directory,5,5,start_tied=
schedule = untied_directory,5,5,stop_untied=

# Create symlinks in the watch directory with a suffix indicating the
# download state
#on_start    = link1,"create_link=tied,,.started"
#on_stop     = link1,"delete_link=tied,,.stopped"
#on_finished = link1,"create_link=tied,,.finished"
#on_erase    = link1,"delete_link=tied,,.finished"

# Move completed torrents
system.method.set_key = event.download.finished,move_complete,"execute=mv,-u,$d.get_base_path=,~/downloads/;d.set_directory=~/downloads/"

# Show only active torrents
schedule = filter_active,30,30,"view_filter = active,\"or={d.get_up_rate=,d.get_down_rate=}\""

# Close torrents when diskspace is low.
#schedule = low_diskspace,5,60,close_low_diskspace=100M

# The ip address reported to the tracker.
#ip = 127.0.0.1
#ip = rakshasa.no

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = 127.0.0.1
#bind = rakshasa.no

# Port range to use for listening.
#port_range = 6890-6999
port_range = 41831-41831

# Start opening ports at a random position within the port range.
port_random = no

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
check_hash = yes

# Set whether the client should try to connect to UDP trackers.
#use_udp_trackers = yes

# Alternative calls to bind and ip that should handle dynamic ip's.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
# encryption = allow_incoming,enable_retry,prefer_plaintext
encryption = allow_incoming,try_outgoing,enable_retry

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
# dht = auto

# UDP port to use for DHT.
# 
# dht_port = 6881

# Enable peer exchange (for torrents not marked private)
#
# peer_exchange = yes
